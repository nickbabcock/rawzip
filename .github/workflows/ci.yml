name: ci
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '00 01 * * *'

# principle of least privilege
# https://github.com/BurntSushi/jiff/blob/86bff5f10fd3bf24a8fc77b5199dc4f0ca4e2c88/.github/workflows/ci.yml#L10
permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - run: cargo build --verbose
    - run: cargo doc --verbose
    - run: cargo test --verbose --all

  # stripped down version of CI to test the MSRV.
  msrv:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.70.0
    - run: cargo build --verbose

  cross:
    env:
      CROSS_VERSION: '0.2.5'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
        - i686-unknown-linux-gnu
        - aarch64-unknown-linux-gnu
        - powerpc-unknown-linux-gnu
        - powerpc64-unknown-linux-gnu
        - s390x-unknown-linux-gnu
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - uses: cargo-bins/cargo-binstall@main
    - run: cargo binstall cross@${CROSS_VERSION}
    - run: cross build --verbose --target ${{ matrix.target }}
    - run: cross test --verbose --target ${{ matrix.target }}

  testbench:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: Build benchmark
      run: cargo bench --manifest-path bench/Cargo.toml -- --test

  # Check that all files are formatted properly.
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check formatting
      run: |
        cargo fmt --all -- --check

  fuzz:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "nightly"
      - run: cargo install cargo-fuzz
      - run: cargo fuzz build fuzz_zip
